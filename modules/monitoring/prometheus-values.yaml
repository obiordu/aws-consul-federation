prometheus:
  prometheusSpec:
    retention: 15d
    resources:
      requests:
        memory: 1Gi
        cpu: 500m
      limits:
        memory: 2Gi
        cpu: 1000m
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: gp2
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    additionalScrapeConfigs:
      - job_name: 'consul'
        metrics_path: '/v1/agent/metrics'
        params:
          format: ['prometheus']
        static_configs:
          - targets: ['consul-server:8500']
        relabel_configs:
          - source_labels: [__address__]
            target_label: instance
          - source_labels: [__address__]
            target_label: region
            replacement: ${region}
      - job_name: 'consul-services'
        consul_sd_configs:
          - server: 'consul-server:8500'
            services: []
        relabel_configs:
          - source_labels: [__meta_consul_service]
            target_label: service
          - source_labels: [__meta_consul_node]
            target_label: node
          - source_labels: [__meta_consul_dc]
            target_label: datacenter

alertmanager:
  enabled: true
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['alertname', 'job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack'
      routes:
        - receiver: 'pagerduty'
          match:
            severity: critical
    receivers:
      - name: 'slack'
        slack_configs:
          - channel: '#consul-alerts'
            send_resolved: true
      - name: 'pagerduty'
        pagerduty_configs:
          - service_key: '${pagerduty_key}'
            send_resolved: true

grafana:
  enabled: true
  adminPassword: "admin"
  persistence:
    enabled: true
    size: 10Gi
    storageClassName: gp2
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: default
          orgId: 1
          folder: ''
          type: file
          disableDeletion: true
          editable: false
          options:
            path: /var/lib/grafana/dashboards
  dashboards:
    default:
      consul-federation:
        json: |
          ${file("dashboards/consul-federation.json")}
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-server
          access: proxy
          isDefault: true
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 200Mi
      cpu: 200m

nodeExporter:
  enabled: true

kubeStateMetrics:
  enabled: true
